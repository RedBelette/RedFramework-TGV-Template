// ENLEVER LE CODE DONT VOUS NE VOUS SERVEZ PAS POUR SIMPLIFIER LA LECTURE.

// @see https://community.bistudio.com/wiki/Description.ext

// https://community.bistudio.com/wiki/Arma_3_Respawn
respawnOnStart = -1;
// https://github.com/CBATeam/CBA_A3/wiki/CBA-Settings-System#export-and-import-function
cba_settings_hasSettingsFile = 1;

// Un exemple de configuration du framework pour la team TGV
// Aucune de ses informations ne sont obligatoire, le framework utilisera des valeurs par défaut.
class RedFrameworkConfig {

	// configure certaines fonctionnalités pour vos missions
	// les valeurs par défaut de toutes les fonctionnalités sont sur false.
	class missionCfg {
		// Ajoute les bouchons d'oreilles dans votre inventaire au départ de la mission
		// Attention votre inventaire ne doit pas être plein
		addItemEarPlugs=true;
		// Met les bouchons d'oreilles s'ils sont dans l'inventaires dans vos oreilles
		putInEarPlugs=true;
		// Active la sécurité de votre arme au départ de la mission
		putSafeMode=true;
	};

	// Si vous souhaitez créé un choix de mission aléatoire.
	// Script: call RF_fnc_missionGenerator;
	// missionPaths contient les chemins des scripts de vos missions
	// un tableau peut également être ajouté pour spécifier le script et si oui/non la mission sera rejouer.
	class MissionGenerator {
		// Exemple:
		/*missionPaths[] = {
			"script\mission\missionSeraRejouerIndefiniment.sqf",
			{"script\mission\missionSeraJouerUneSeuleFois.sqf", false}
		};*/
	};

	//*******************************************************************************//
	// Les fonctionnalités de combatpatrol_ personnalise les fonctions suivantes:   *//
	// - RF_fnc_spawnGarrison														*//
	// - RF_fnc_spawnCirclePatrols													*//
	//*******************************************************************************//

	// Défini la faction ennemie. Impacte les deux fonctions cité plus haut.
	class combatPatrol_CfgEnemis {
		// Exemple:
		// side = "east";
	};

	// Défini la fonction RF_fnc_spawnCirclePatrols
	class combatPatrol_SpawnCirclePatrols {
		// Exemple:
		/*distance = 200;
		unitTypes[] = {{"LOP_US_Infantry_SL", "LOP_US_Infantry_Rifleman_4", "LOP_US_Infantry_TL"}, {"LOP_US_Infantry_MG_2", "LOP_US_Infantry_MG_Asst"}, {"LOP_US_Infantry_Rifleman_2", "LOP_US_Infantry_Rifleman_4"}, {"LOP_US_Infantry_Rifleman_2", "LOP_US_Infantry_Rifleman_4", "LOP_US_Infantry_MG_Asst", "LOP_US_Infantry_MG_2"}};
		radiusPatrols[] = {50, 100, 200};*/
	};

	// Défini la fonction RF_fnc_spawnGarrison
	class combatPatrol_SpawnGarrison {
		// Exemple:
		/*distance = 100;
		unitTypes[] = {{"LOP_US_Infantry_SL", "LOP_US_Infantry_Rifleman_4", "LOP_US_Infantry_TL"}, {"LOP_US_Infantry_MG_2", "LOP_US_Infantry_MG_Asst"}, {"LOP_US_Infantry_Rifleman_2", "LOP_US_Infantry_Rifleman_4"}, {"LOP_US_Infantry_Rifleman_2", "LOP_US_Infantry_Rifleman_4", "LOP_US_Infantry_MG_Asst", "LOP_US_Infantry_MG_2"}};
		ramdomizeDistance = 80;*/
	};

	// Défini l'exemple de mission helicopter crash in town (exemple du serveur combat patrol TGV)
	class combatPatrol_missions {
		class combatPatrol_helicopterCrashInTown {
			// Exemple:
			/*helicopterClass = "B_Heli_Light_01_dynamicLoadout_F";
			unitTypes[] = {{"LOP_US_Infantry_SL", "LOP_US_Infantry_Rifleman_4", "LOP_US_Infantry_TL"}};*/
		};
	};

};

/*
class CfgMusic
{
	tracks[]={};

	class BlackSabbath
	{
		name = "BlackSabbath";
		sound[] = {"\media\music\blacksabbath.ogg", db+10, 1.0};
	};
};

class CfgSounds {
  	class PowerOff {
    	name = "";
    	sound[] = {"media\sound\powerdown.ogg", 1, 1};
    	titles[] = {1, ""};
  	};
};

// Attention le CfgSFX doit correspondre au CfgVehicles
class CfgSFX
{
	class Monster_SFX
	{
		name = "Monster scream";
		sound0[] = {"media\sfx\monsterscream1.ogg", 5, 1.0, 20, 0.2, 0, 15, 30};
		sound1[] = {"media\sfx\monsterscream2.ogg", 5, 1.0, 20, 0.2, 0, 15, 30};
		sound2[] = {"media\sfx\monsterscream3.ogg", 5, 1.0, 20, 0.2, 0, 15, 30};
		sound3[] = {"media\sfx\monsterscream4.ogg", 5, 1.0, 20, 0.2, 0, 15, 30};
		sounds[] = {sound0, sound1, sound2, sound3};
		empty[] = {"", 0, 0, 0, 0, 0, 0, 0};
	};
};

class CfgVehicles
{
	class Monster_SFX // class name to be used with createSoundSource
	{
		sound = "Monster_SFX"; // reference to CfgSFX class
	};
};

class CfgIdentities
{
    class Yeltsin
    {
		name = "Vladimir Yeltsin";
        face="WhiteHead_20";
		glasses="None";
		speaker="RHS_Male03RUS";
		pitch=1.0;
    };
};*/




